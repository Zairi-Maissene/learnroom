name: Build and deploy an app to AKS

on:
  push:
    branches:
      - test

  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: "learnroom"
  CONTAINER_NAME: "learn-room"
  RESOURCE_GROUP: "aks-learn-room"
  CLUSTER_NAME: "aks-learn-room"
  DEPLOYMENT_MANIFEST_PATH: "deployment.yaml"

jobs:
  buildImage:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      # Checks out the repository
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Builds and pushes an image up to ACR
      #- name: Build and push image to ACR
        #run: |
          #az acr login -n ${{ env.AZURE_CONTAINER_REGISTRY }} -p ${{ secrets.AZURE_ACR_PASSWORD }} -u learnroom
          #docker build . -t ${{env.AZURE_CONTAINER_REGISTRY}}.azurecr.io/${{env.CONTAINER_NAME}}:${{ github.sha }}
          #docker push ${{env.AZURE_CONTAINER_REGISTRY}}.azurecr.io/${{env.CONTAINER_NAME}}:${{ github.sha }}
  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: [buildImage]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig files
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          #images: |
            #${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}:${{ github.sha }}
